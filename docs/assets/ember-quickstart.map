{"version":3,"sources":["vendor/ember-cli/app-prefix.js","ember-quickstart/adapters/application.js","ember-quickstart/adapters/ls-adapter.js","ember-quickstart/app.js","ember-quickstart/components/welcome-page.js","ember-quickstart/controllers/application.js","ember-quickstart/helpers/app-version.js","ember-quickstart/helpers/pluralize.js","ember-quickstart/helpers/singularize.js","ember-quickstart/initializers/app-version.js","ember-quickstart/initializers/container-debug-adapter.js","ember-quickstart/initializers/ember-data.js","ember-quickstart/initializers/export-application-global.js","ember-quickstart/instance-initializers/ember-data.js","ember-quickstart/models/entry.js","ember-quickstart/models/segment-entry.js","ember-quickstart/models/segment.js","ember-quickstart/resolver.js","ember-quickstart/router.js","ember-quickstart/routes/application.js","ember-quickstart/serializers/application.js","ember-quickstart/serializers/ls-serializer.js","ember-quickstart/services/ajax.js","ember-quickstart/templates/application.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n","define('ember-quickstart/adapters/application', ['exports', 'ember-localstorage-adapter'], function (exports, _emberLocalstorageAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberLocalstorageAdapter.default.extend({\n    namespace: 'quickranker'\n  });\n});","define('ember-quickstart/adapters/ls-adapter', ['exports', 'ember-localstorage-adapter/adapters/ls-adapter'], function (exports, _lsAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _lsAdapter.default;\n});","define('ember-quickstart/app', ['exports', 'ember-quickstart/resolver', 'ember-load-initializers', 'ember-quickstart/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('ember-quickstart/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _welcomePage.default;\n    }\n  });\n});","define('ember-quickstart/controllers/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Controller.extend({\n    store: Ember.inject.service('store'),\n\n    setRoot() {\n      this.set('root', this.get('model.segments').filter(s => s.get('root'))[0]);\n    },\n\n    getNext(segment) {\n      if (segment.get('left.writeComplete') && segment.get('right.writeComplete')) {\n        return segment;\n      }\n\n      let queue = [];\n      if (!segment.get('left.writeComplete')) {\n        queue.push(segment.get('left'));\n      }\n      if (!segment.get('right.writeComplete')) {\n        queue.push(segment.get('right'));\n      }\n\n      let idx = Math.floor(Math.random() * queue.length);\n\n      return this.getNext(queue[idx]);\n    },\n\n    setNext() {\n      if (this.get('root') == null) {\n        this.set('nextChoice', null);\n        this.set('completed', false);\n        this.set('empty', true);\n      } else if (this.get('root.writeComplete')) {\n        this.set('nextChoice', null);\n        this.set('completed', true);\n        this.set('empty', false);\n      } else {\n        this.set('nextChoice', this.getNext(this.get('root')));\n        this.set('completed', false);\n        this.set('empty', false);\n      }\n      this.set('flipLeftRight', Math.random() > 0.5);\n    },\n\n    step(better, worse) {\n      let insertIndex = this.get('nextChoice.segmentEntries.length');\n      let segEntry = this.get('store').createRecord('segment-entry', {\n        segment: this.get('nextChoice'),\n        entry: better.get('top'),\n        index: insertIndex\n      });\n      segEntry.save();\n\n      better.set('readHead', better.get('readHead') + 1);\n\n      if (better.get('readComplete')) {\n        for (let i = worse.get('readHead'); i < worse.get('length'); i++) {\n          insertIndex++;\n\n          let segEntry = this.get('store').createRecord('segment-entry', {\n            segment: this.get('nextChoice'),\n            entry: worse.get('top'),\n            index: insertIndex\n          });\n          segEntry.save();\n\n          worse.set('readHead', worse.get('readHead') + 1);\n        }\n      }\n\n      if (better.get('readComplete') && worse.get('readComplete')) {\n        better.destroyRecord();\n        worse.destroyRecord();\n      } else {\n        better.save();\n        worse.save();\n      }\n    },\n\n    _recomputeSegments() {\n      this.get('store').peekAll('segment-entry').forEach(segmentEntry => {\n        segmentEntry.destroyRecord();\n      });\n      this.get('store').peekAll('segment').forEach(segment => {\n        segment.destroyRecord();\n      });\n      let root = this._generateSegments(this.get('store').peekAll('entry').slice());\n      if (root != null) {\n        root.set('root', true);\n        root.save();\n      }\n      this.set('root', root);\n      this.setNext();\n    },\n\n    _generateSegments(data) {\n      if (data.length == 0) {\n        return null;\n      }\n\n      let segment = this.get('store').createRecord('segment', {\n        length: data.length,\n        readHead: 0,\n        root: false\n      });\n\n      if (data.length == 1) {\n        let segmentEntry = this.get('store').createRecord('segment-entry', {\n          segment: segment,\n          entry: data[0],\n          index: 0\n        });\n        segmentEntry.save();\n      } else {\n        let midpoint = Math.floor(data.length / 2);\n        let leftData = data.slice(0, midpoint);\n        segment.set('left', this._generateSegments(leftData));\n        let rightData = data.slice(midpoint);\n        segment.set('right', this._generateSegments(rightData));\n      }\n      segment.save();\n      return segment;\n    },\n\n    actions: {\n      left() {\n        this.step(this.get('nextChoice.left'), this.get('nextChoice.right'));\n        this.setNext();\n      },\n\n      right() {\n        this.step(this.get('nextChoice.right'), this.get('nextChoice.left'));\n        this.setNext();\n      },\n\n      addEntry() {\n        let record = this.get('store').createRecord('entry', {\n          name: this.get('newEntryName')\n        });\n        this.set('newEntryName', '');\n        record.save().then(() => {\n          this._recomputeSegments();\n        });\n      },\n\n      deleteEntry(entry) {\n        entry.destroyRecord().then(() => {\n          this._recomputeSegments();\n        });\n      },\n\n      rerank() {\n        this._recomputeSegments();\n      }\n    }\n  });\n});","define('ember-quickstart/helpers/app-version', ['exports', 'ember-quickstart/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n\n\n  const {\n    APP: {\n      version\n    }\n  } = _environment.default;\n\n  function appVersion(_, hash = {}) {\n    if (hash.hideSha) {\n      return version.match(_regexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_regexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('ember-quickstart/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('ember-quickstart/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('ember-quickstart/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'ember-quickstart/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  let name, version;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('ember-quickstart/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize() {\n      let app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('ember-quickstart/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('ember-quickstart/initializers/export-application-global', ['exports', 'ember-quickstart/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function () {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define(\"ember-quickstart/instance-initializers/ember-data\", [\"exports\", \"ember-data/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('ember-quickstart/models/entry', ['exports', 'ember-data'], function (exports, _emberData) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberData.default.Model.extend({\n    name: _emberData.default.attr('string')\n  });\n});","define('ember-quickstart/models/segment-entry', ['exports', 'ember-data'], function (exports, _emberData) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberData.default.Model.extend({\n    segment: _emberData.default.belongsTo('segment'),\n    entry: _emberData.default.belongsTo('entry'),\n    index: _emberData.default.attr('number')\n  });\n});","define('ember-quickstart/models/segment', ['exports', 'ember-data'], function (exports, _emberData) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberData.default.Model.extend({\n    left: _emberData.default.belongsTo('segment', { inverse: null, async: false }),\n    right: _emberData.default.belongsTo('segment', { inverse: null, async: false }),\n    segmentEntries: _emberData.default.hasMany('segment-entry'),\n    readHead: _emberData.default.attr('number'),\n    length: _emberData.default.attr('number'),\n    root: _emberData.default.attr('boolean'),\n\n    sortedEntries: Ember.computed('segmentEntries.@each.index', function () {\n      let segEntries = this.get('segmentEntries').slice();\n      segEntries.sort((a, b) => {\n        a.get('index') - b.get('index');\n      });\n      let entries = segEntries.map(e => e.get('entry'));\n      return entries;\n    }),\n\n    top: Ember.computed('sortedEntries', 'readHead', function () {\n      return this.get('sortedEntries')[this.get('readHead')];\n    }),\n\n    writeComplete: Ember.computed('segmentEntries.length', 'length', function () {\n      return this.get('segmentEntries.length') == this.get('length');\n    }),\n\n    readComplete: Ember.computed('readHead', 'length', function () {\n      return this.get('readHead') == this.get('length');\n    })\n  });\n});","define('ember-quickstart/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('ember-quickstart/router', ['exports', 'ember-quickstart/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {});\n\n  exports.default = Router;\n});","define('ember-quickstart/routes/application', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Route.extend({\n    model() {\n      return Ember.RSVP.hash({\n        'entries': this.store.findAll('entry'),\n        'segments': this.store.findAll('segment'),\n        'segmentEntries': this.store.findAll('segment-entry')\n      });\n    },\n\n    setupController(controller) {\n      this._super(...arguments);\n\n      controller.setRoot();\n      controller.setNext();\n    }\n  });\n});","define('ember-quickstart/serializers/application', ['exports', 'ember-localstorage-adapter'], function (exports, _emberLocalstorageAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberLocalstorageAdapter.LSSerializer.extend();\n});","define('ember-quickstart/serializers/ls-serializer', ['exports', 'ember-localstorage-adapter/serializers/ls-serializer'], function (exports, _lsSerializer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _lsSerializer.default;\n});","define('ember-quickstart/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define(\"ember-quickstart/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"mC20zYM2\", \"block\": \"{\\\"symbols\\\":[\\\"entry\\\",\\\"entry\\\"],\\\"statements\\\":[[6,\\\"h1\\\"],[7],[0,\\\"Quick Ranker\\\"],[8],[0,\\\"\\\\n\\\"],[6,\\\"h3\\\"],[7],[0,\\\"Add a new item\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[1,[25,\\\"input\\\",null,[[\\\"value\\\",\\\"enter\\\"],[[20,[\\\"newEntryName\\\"]],\\\"addEntry\\\"]]],false],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"h3\\\"],[7],[0,\\\"Your items:\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"each\\\",[[20,[\\\"model\\\",\\\"entries\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"li\\\"],[7],[0,\\\"\\\\n    \\\"],[1,[19,2,[\\\"name\\\"]],false],[0,\\\"\\\\n    \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"deleteEntry\\\",[19,2,[]]]],[7],[0,\\\"delete\\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2]},null],[0,\\\"\\\\n\\\"],[6,\\\"h3\\\"],[7],[0,\\\"Ranking\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[20,[\\\"empty\\\"]]],null,{\\\"statements\\\":[[0,\\\"  Add some items in order to rank them\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[4,\\\"if\\\",[[20,[\\\"completed\\\"]]],null,{\\\"statements\\\":[[0,\\\"    Your order is:\\\\n\\\"],[4,\\\"each\\\",[[20,[\\\"root\\\",\\\"sortedEntries\\\"]]],null,{\\\"statements\\\":[[0,\\\"    \\\"],[6,\\\"li\\\"],[7],[1,[19,1,[\\\"name\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[1]},null],[0,\\\"    \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"rerank\\\"]],[7],[0,\\\"Reset ranking\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"    Which is better?\\\\n\\\"],[4,\\\"if\\\",[[20,[\\\"flipLeftRight\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"right\\\"]],[7],[1,[20,[\\\"nextChoice\\\",\\\"right\\\",\\\"top\\\",\\\"name\\\"]],false],[8],[0,\\\"\\\\n      \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"left\\\"]],[7],[1,[20,[\\\"nextChoice\\\",\\\"left\\\",\\\"top\\\",\\\"name\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"left\\\"]],[7],[1,[20,[\\\"nextChoice\\\",\\\"left\\\",\\\"top\\\",\\\"name\\\"]],false],[8],[0,\\\"\\\\n      \\\"],[6,\\\"button\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"right\\\"]],[7],[1,[20,[\\\"nextChoice\\\",\\\"right\\\",\\\"top\\\",\\\"name\\\"]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"ember-quickstart/templates/application.hbs\" } });\n});","define('ember-quickstart/config/environment', [], function() {\n  var prefix = 'ember-quickstart';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"ember-quickstart/app\")[\"default\"].create({\"name\":\"ember-quickstart\",\"version\":\"0.0.0+eada4cd0\"});\n}\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"ember-quickstart.js"}